import { type ClassValue, clsx } from "clsx";
import { twMerge } from "tailwind-merge";

export function cn(...inputs: ClassValue[]) {
    return twMerge(clsx(...inputs));
}

export function toPlainObject<T>(doc: T): T {
    return JSON.parse(JSON.stringify(doc));
}

export function getCountryCodeFromLanguage(languageCode: string): string {
    return languageToCountryMap[languageCode] || languageCode;
}

const languageToCountryMap: Record<string, string> = {
    en: "us",
    es: "es",
    fr: "fr",
    de: "de",
    it: "it",
    pt: "pt",
    ru: "ru",
    zh: "cn",
    ja: "jp",
    ko: "kr",
    ar: "sa",
    hi: "in",
    fa: "ir",
    tr: "tr",
    pl: "pl",
    nl: "nl",
    ro: "ro",
    uk: "ua",
    sv: "se",
    cs: "cz",
    el: "gr",
    hu: "hu",
    id: "id",
    ms: "my",
    vi: "vn",
    th: "th",
    he: "il",
    ur: "pk",
    bn: "bd",
    ta: "lk",
    te: "in",
    ml: "in",
    kn: "in",
    pa: "in",
    gu: "in",
    si: "lk",
    sr: "rs",
    sk: "sk",
    sl: "si",
    hr: "hr",
    mk: "mk",
    lt: "lt",
    lv: "lv",
    et: "ee",
    bg: "bg",
    sq: "al",
    af: "za",
    sw: "tz",
    no: "no",
    fi: "fi",
    da: "dk",
    is: "is",
    ga: "ie",
    gd: "gb",
    cy: "gb",
    ka: "ge",
    hy: "am",
    az: "az",
    kk: "kz",
    ky: "kg",
    uz: "uz",
    mn: "mn",
    tg: "tj",
    tk: "tm",
    ps: "af",
    urd: "pk",
    am: "et",
    yo: "ng",
    ha: "ng",
    ig: "ng",
    zu: "za",
    xh: "za",
    sn: "zw",
    st: "za",
    so: "so",
    ne: "np",
    my: "mm",
    lo: "la",
    km: "kh",
    jv: "id",
    ceb: "ph",
    sm: "ws",
    haw: "us",
    mi: "nz",
    hmn: "us",
    eo: "pl", // Esperanto — arbitrary fallback
    la: "va", // Latin — Vatican
    ku: "iq",
    ug: "cn",
    rw: "rw",
    fy: "nl",
    be: "by",
    bs: "ba",
    gl: "es",
    co: "fr",
    lb: "lu",
    mt: "mt",
    mg: "mg",
    sd: "pk",
    su: "id",
    tt: "ru",
    yi: "il",
    cmn: "cn",
    yue: "hk",
    // fallback entries
};
